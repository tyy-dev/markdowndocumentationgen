using System.Xml.Linq;
using documentationgenerator.Entries;

namespace documentationgenerator
{
    internal class Program
    {
        static void Main(string[] args) {
           XDocument doc = XDocument.Load("API-AutoGenerated.xml");
           XElement? root = doc.Root;
            if (root != null) {
                AssemblyEntry assembly = new(root.Element("assembly")!);
                IEnumerable<MemberEntry>? memberEntries = root.Element("members")?.Elements("member").Select(element => new MemberEntry(element));
                using StreamWriter outputFile = new("Text.txt");
                outputFile.WriteLine($"<a name='assembly'></a>\r\n# {assembly.name}");
                outputFile.WriteLine("---");
                foreach (MemberEntry member in memberEntries) {

                    outputFile.WriteLine($"<a name='{member.raw}'></a>");

                    string nameStr = $"### {member.name} `{member.GetMemberType()}`";
                    if (member.typeinfo != string.Empty)
                        nameStr += $" `{member.typeinfo}`";
                    outputFile.WriteLine(nameStr);

                    if (member.summary != string.Empty)
                        outputFile.WriteLine($"#### Summary\r\n{member.summary}");

                    if (member.remarks != string.Empty)
                        outputFile.WriteLine($"#### Remarks\r\n{member.remarks}");

                    if (member.parameters.Count() != 0) {
                        outputFile.WriteLine($"#### Parameters");
                        outputFile.WriteLine("| Name | Type | Description |");
                        outputFile.WriteLine("| ---- | ---- | ----------- |");
                        foreach (MemberParam param in member.parameters)
                            outputFile.WriteLine($"| {param.name} | {param.type} | {param.description}");
                    }

                    if (member.returns != string.Empty)
                        outputFile.WriteLine($"#### Returns\r\n{member.returns}");

                    outputFile.WriteLine("\r\n---");
                }
            }
        }
    }
}
